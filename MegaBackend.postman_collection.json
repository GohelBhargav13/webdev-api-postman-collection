{
	"info": {
		"_postman_id": "597fce25-b231-4a18-89eb-a0189307a3a2",
		"name": "MegaBackend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42621580",
		"_collection_link": "https://winter-spaceship-725369.postman.co/workspace/85d0a64c-7745-404b-892a-9047ed54e702/collection/42621580-597fce25-b231-4a18-89eb-a0189307a3a2?action=share&source=collection_link&creator=42621580"
	},
	"item": [
		{
			"name": "USER",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"gohelbhargav02@gmail.com\",\r\n    \"password\":12345678,\r\n    \"username\":\"bhargavgoh\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyEmail",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"gohelbhargav401@gmail.com\",\r\n    \"password\":123456,\r\n    \"username\":\"bhargav\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/user/verify/6a0ac2df8a0382f3f9817c1c2ca92fbf6198fe1bbbece880f494529cb4844a06",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"user",
								"verify",
								"6a0ac2df8a0382f3f9817c1c2ca92fbf6198fe1bbbece880f494529cb4844a06"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"gohelbhargav401@gmail.com\",\r\n    \"password\":12345678,\r\n    \"username\":\"bhargav\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"gohelbhargav401@gmail.com\",\r\n    \"password\":123456,\r\n    \"username\":\"bhargav\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/user/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"gohelbhargav401@gmail.com\",\r\n    \"password\":123456,\r\n    \"username\":\"bhargav\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/user/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PROJECT",
			"item": [
				{
					"name": "createProject",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\":\"AlumniConnect-v2\",\r\n   \"description\":\"AlumniConnect is the project that is bridge between alumni and students Version-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/project/newproject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"project",
								"newproject"
							]
						}
					},
					"response": []
				},
				{
					"name": "findbyname",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/v1/project/findproject/MegaProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"project",
								"findproject",
								"MegaProject"
							]
						}
					},
					"response": []
				},
				{
					"name": "myproject",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/v1/project/myproject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"project",
								"myproject"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteproject",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/v1/project/deleteproject/MegaProject",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"project",
								"deleteproject",
								"MegaProject"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NOTES",
			"item": [
				{
					"name": "getnotes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\":\"MegaProject\",\r\n   \"description\":\"This is the mega Backend Project for the Express\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/notes/68a36fcd13181afe63283db2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"notes",
								"68a36fcd13181afe63283db2"
							]
						}
					},
					"response": []
				},
				{
					"name": "createnote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<canvas id=\"myChart\" height=\"75\"></canvas>\r",
									"\r",
									"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> \r",
									"\r",
									"<script>\r",
									"    var ctx = document.getElementById(\"myChart\");\r",
									"\r",
									"    var myChart = new Chart(ctx, {\r",
									"        type: \"line\",\r",
									"        data: {\r",
									"            labels: [\"Created At\", \"Updated At\"],\r",
									"            datasets: [{\r",
									"                label: \"Notes Timeline\",\r",
									"                data: [new Date(\"{{response.data.findUser.createdAt}}\").getTime(), new Date(\"{{response.data.findUser.updatedAt}}\").getTime()],\r",
									"                borderColor: \"#3e95cd\",\r",
									"                fill: false\r",
									"            }]\r",
									"        },\r",
									"        options: {\r",
									"            legend: { display: true },\r",
									"            title: {\r",
									"                display: true,\r",
									"                text: 'Notes Creation and Update Timeline'\r",
									"            },\r",
									"            scales: {\r",
									"                xAxes: [{\r",
									"                    type: 'time',\r",
									"                    time: {\r",
									"                        unit: 'day'\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Date'\r",
									"                    }\r",
									"                }],\r",
									"                yAxes: [{\r",
									"                    ticks: {\r",
									"                        beginAtZero: true\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Timestamp'\r",
									"                    }\r",
									"                }]\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"</script>`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    var res = pm.response.json();\r",
									"    \r",
									"    return {response: res};\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\":\"This is note of this project\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/notes/68a36fcd13181afe63283db2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"notes",
								"68a36fcd13181afe63283db2"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatenote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<canvas id=\"myChart\" height=\"75\"></canvas>\r",
									"\r",
									"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> \r",
									"\r",
									"<script>\r",
									"    var ctx = document.getElementById(\"myChart\");\r",
									"\r",
									"    var myChart = new Chart(ctx, {\r",
									"        type: \"line\",\r",
									"        data: {\r",
									"            labels: [\"Created At\", \"Updated At\"],\r",
									"            datasets: [{\r",
									"                label: \"Notes Timeline\",\r",
									"                data: [new Date(\"{{response.data.findUser.createdAt}}\").getTime(), new Date(\"{{response.data.findUser.updatedAt}}\").getTime()],\r",
									"                borderColor: \"#3e95cd\",\r",
									"                fill: false\r",
									"            }]\r",
									"        },\r",
									"        options: {\r",
									"            legend: { display: true },\r",
									"            title: {\r",
									"                display: true,\r",
									"                text: 'Notes Creation and Update Timeline'\r",
									"            },\r",
									"            scales: {\r",
									"                xAxes: [{\r",
									"                    type: 'time',\r",
									"                    time: {\r",
									"                        unit: 'day'\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Date'\r",
									"                    }\r",
									"                }],\r",
									"                yAxes: [{\r",
									"                    ticks: {\r",
									"                        beginAtZero: true\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Timestamp'\r",
									"                    }\r",
									"                }]\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"</script>`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    var res = pm.response.json();\r",
									"    \r",
									"    return {response: res};\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\":\"This is note of this project1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/notes/68a377128d5540dd6d693f9b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"notes",
								"68a377128d5540dd6d693f9b"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletenote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<canvas id=\"myChart\" height=\"75\"></canvas>\r",
									"\r",
									"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> \r",
									"\r",
									"<script>\r",
									"    var ctx = document.getElementById(\"myChart\");\r",
									"\r",
									"    var myChart = new Chart(ctx, {\r",
									"        type: \"line\",\r",
									"        data: {\r",
									"            labels: [\"Created At\", \"Updated At\"],\r",
									"            datasets: [{\r",
									"                label: \"Notes Timeline\",\r",
									"                data: [new Date(\"{{response.data.findUser.createdAt}}\").getTime(), new Date(\"{{response.data.findUser.updatedAt}}\").getTime()],\r",
									"                borderColor: \"#3e95cd\",\r",
									"                fill: false\r",
									"            }]\r",
									"        },\r",
									"        options: {\r",
									"            legend: { display: true },\r",
									"            title: {\r",
									"                display: true,\r",
									"                text: 'Notes Creation and Update Timeline'\r",
									"            },\r",
									"            scales: {\r",
									"                xAxes: [{\r",
									"                    type: 'time',\r",
									"                    time: {\r",
									"                        unit: 'day'\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Date'\r",
									"                    }\r",
									"                }],\r",
									"                yAxes: [{\r",
									"                    ticks: {\r",
									"                        beginAtZero: true\r",
									"                    },\r",
									"                    scaleLabel: {\r",
									"                        display: true,\r",
									"                        labelString: 'Timestamp'\r",
									"                    }\r",
									"                }]\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"</script>`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    var res = pm.response.json();\r",
									"    \r",
									"    return {response: res};\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/notes/68a3774fea04410d5f63c50e",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"notes",
								"68a3774fea04410d5f63c50e"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PROJECTMEMBER",
			"item": [
				{
					"name": "addmember",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"689f31c143697ce4446c3ef2\",\r\n    \"role\":\"project_member\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/projectmember/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"projectmember",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				},
				{
					"name": "removemember",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"689f31c143697ce4446c3ef2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/projectmember/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"projectmember",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				},
				{
					"name": "showAllmembers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":\"689f31c143697ce4446c3ef2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/projectmember/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"projectmember",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TASKS",
			"item": [
				{
					"name": "creatTask",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"login module\",\r\n    \"description\": \"This is the one step towards to the authentication\",\r\n    \"assignTo\": \"689f505fa38d71ee9a52a56b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/tasks/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTask",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"login module\",\r\n    \"description\": \"This is the one step towards to the authentication version-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/tasks/updatetask/68a5bb81543839524eee4839/68a6bbad32e1037dcfe9e01c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"updatetask",
								"68a5bb81543839524eee4839",
								"68a6bbad32e1037dcfe9e01c"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTask",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"login module\",\r\n    \"description\": \"This is the one step towards to the authentication version-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/tasks/deletetask/68a5bb81543839524eee4839/68a6bbad32e1037dcfe9e01c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"deletetask",
								"68a5bb81543839524eee4839",
								"68a6bbad32e1037dcfe9e01c"
							]
						}
					},
					"response": []
				},
				{
					"name": "getallTask",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"login module\",\r\n    \"description\": \"This is the one step towards to the authentication version-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/tasks/getalltask/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"getalltask",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				},
				{
					"name": "gettaskById",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"login module\",\r\n    \"description\": \"This is the one step towards to the authentication version-2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/tasks/gettask/68a5bb81543839524eee4839",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"gettask",
								"68a5bb81543839524eee4839"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SUBTASKS",
			"item": [
				{
					"name": "createSubtask",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Login page frontend design\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/subtasks/newsubtask/68a6c33527a2201891c008b3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"subtasks",
								"newsubtask",
								"68a6c33527a2201891c008b3"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchAllTask",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Login page frontend design\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/subtasks/getall/68a6c33527a2201891c008b3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"subtasks",
								"getall",
								"68a6c33527a2201891c008b3"
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchSubTaskById",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Login page frontend design\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/subtasks/fetchbyid/68a6fa5f9ea1eed3f7d88cba",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"subtasks",
								"fetchbyid",
								"68a6fa5f9ea1eed3f7d88cba"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSubtask",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"isCompleted\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/subtasks/updatesubtask/68a6fa5f9ea1eed3f7d88cba",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"subtasks",
								"updatesubtask",
								"68a6fa5f9ea1eed3f7d88cba"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSubTask",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"isCompleted\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/v1/subtasks/deletesubtask/68a6fa5f9ea1eed3f7d88cba",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"subtasks",
								"deletesubtask",
								"68a6fa5f9ea1eed3f7d88cba"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HealthCheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/api/v1/healthcheck/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"v1",
						"healthcheck",
						""
					]
				}
			},
			"response": []
		}
	]
}